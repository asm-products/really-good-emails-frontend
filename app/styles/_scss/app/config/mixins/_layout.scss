// Helper Mixins
// ====================================================================================================

// Mixin for set up the baseline
// Customize version from:
// http://compass-style.org/reference/compass/typography/vertical_rhythm/#mixin-establish-baseline
// ---------------------------------------------------------------------------
//
// Mixin for reset list
// ---------------------------------------------------------------------------
@mixin reset-list {
	margin: 0;
	padding: 0;
	list-style: none;
}

// Mixin for box-sizing (box model)
// Acceptable values are border, content, and padding - content is the default W3C model
// ---------------------------------------------------------------------------
@mixin box-sizing($type: "border") {
	box-sizing: #{$type}-box;
	-webkit-box-sizing: #{$type}-box;
	-moz-box-sizing: #{$type}-box;
}

// Mixin for cross browser inline-block
// http://blog.mozilla.org/webdev/2009/02/20/cross-browser-inline-block/
// ---------------------------------------------------------------------------
@mixin inline-block($align:'top') {
	display: -moz-inline-stack;
	-moz-box-orient: vertical;
	display: inline-block;
	*display: inline;
	*zoom: 1;
	vertical-align: #{$align};
	margin-right: -4px;
}

// Border Radius
// Modifed version from http://compass-style.org/reference/compass/css3/border_radius/
// -o- and -ms- vendor prefix not exist for border radius
// ---------------------------------------------------------------------------
$default-rad: 5px !default;

@mixin border-radius($rad: $default-rad) {
	-webkit-border-radius	: $rad;
	-moz-border-radius		: $rad;
	border-radius			: $rad;

	 // keeps background from busting out of border
	-webkit-background-clip: padding-box;
	-moz-background-clip: padding;
	background-clip: padding-box;
}

// Percentage
// ---------------------------------------------------------------------------
@function calc-percent($target, $container) {
	@return ($target / $container) * 100%;
}

// PX to EM coversion
// ---------------------------------------------------------------------------
@function pem($px, $base: 16) {
	@if (unitless($px)) {
		$px: $px * 1px;
	}
	@if (unitless($base)) {
		$base: $base * 1px;
	}

	@return $px / $base * 1em;
}

// MediaQueries mixins
// ---------------------------------------------------------------------------
@mixin mq-at-least($device-width) {
	@media screen and (min-width: $device-width) {
		@content;
	}
}

@mixin mq-until($device-width) {
	@media screen and (max-width: $device-width - 1) {
		@content;
	}
}
// @include mq("all and (min-width:33em)") {
//  ...
// }
@mixin mq($query: nil) {
	@media #{$query} {
		@content;
	}
}

// Fluid Ratio: Scale container to set dimensions (large / small)
// ---------------------------------------------------------------------------
@mixin fluid-ratio($large-size, $small-size) {
    $width-large: nth($large-size, 1);
    $width-small: nth($small-size, 1);
    $height-large: nth($large-size, 2);
    $height-small: nth($small-size, 2);
    $slope: ($height-large - $height-small) / ($width-large - $width-small);
    $height: $height-small - $width-small * $slope;

    padding-top: $slope * 100%;
    height: $height;

    background-size: cover;
    -moz-background-size: cover;
    background-position: center;
}

// Internet Explorer 9-10
// @param [literal] $value: value for Internet Explorer 9 and 10
// ---------------------------------------------------------------------------
@function ie9($value) {
    @return #{$value + ' \ '};
}

// Internet Explorer 6-10
// @param [literal] $value: value for Internet Explorer 6 to 10
// ---------------------------------------------------------------------------
@function ie10($value) {
    @return #{$value + '\9'};
}
